#include <bits/stdc++.h>
#include <functional>

using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  int T;
  cin >> T;
  vector<int> l;
  map<int, int> mp;
  auto compress = [&]() {
    sort(l.begin(), l.end());
    l.resize(distance(l.begin(), unique(l.begin(), l.end())));
    for (int i : l) {
      mp[i] = mp.size();
    }
  };
  while (T--) {
    int N;
    cin >> N;
    vector<int> a(N);
    for (int i = 0; i < N; i++) {
      cin >> a[i];
      l.push_back(a[i]);
    }
    compress();
    vector<int> p(N + 1, 0);
    for (int i = 0; i < N; i++) {
      a[i] = mp[a[i]];
      p[a[i]] = i;
    }
    int ans = 1e9;
    for (int i = 1; i <= N; i++) {
      int res = 0;
      vector<int> s;
      for (int j = 0; j < N; j++) {
        if (a[j] < i) {
          s.push_back(a[j]);
        }
      }
      vector<int> b;
      for (int j = 0; j < N; j++) {
        if (a[j] < a[i]) {
          res++;
        } else {
          b.push_back(a[j]);
        }
      }

      ans = min(ans, res);
    }
  }
}
