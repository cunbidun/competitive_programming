/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author cunbidun
 */

#include <bits/stdc++.h>

#define F first
#define S second
#define pb push_back
#define mp make_pair
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define watch(x) out << (#x) << " = " << (x) << endl
#define rf(i, a, b) for(int (i) = (a); (i) <= (b); (i)++)
#define rb(i, b, a) for(int (i) = (b); (i) >= (a); (i)--)

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef pair<ii, int> iii;
typedef vector<ii> vii;

const int N = 2e5 + 1;
const int MOD = 1e9 + 7;
const int INF = 2e9;

class Task376C {
public:
    void solve(istream &in, ostream &out) {
        string s;
        in >> s;
        int cur = 0;
        int cnt = 0;
        bool ch1 = 0, ch6 = 0, ch8 = 0, ch9 = 0;
        rf(i, 0, sz(s) - 1) {
            if (!ch1 && s[i] == '1') {
                ch1 = 1;
                continue;
            }
            if (!ch6 && s[i] == '6') {
                ch6 = 1;
                continue;
            }
            if (!ch8 && s[i] == '8') {
                ch8 = 1;
                continue;
            }
            if (!ch9 && s[i] == '9') {
                ch9 = 1;
                continue;
            }
            if (s[i] != '0') {
                cur = (cur * 10 + s[i] - '0') % 7;
                out << s[i];
            } else cnt++;
        }
        cur = (cur * 10000) % 7;
        if (cur % 7 == 0) out << "1869";
        if (cur % 7 == 1) out << "1896";
        if (cur % 7 == 2) out << "9861";
        if (cur % 7 == 3) out << "8691";
        if (cur % 7 == 4) out << "6198";
        if (cur % 7 == 5) out << "9816";
        if (cur % 7 == 6) out << "1968";
        while (cnt--) out << "0";
    }
};

class TestCase {
public:
    static constexpr int numTest = 0;
    static constexpr bool haveAns = false;

    static void generateTest(ostream &test) {
    }

    static void solve(istream &in, ostream &out) {
    }
};

class Checker {
public:
    static constexpr double arg = 0.0;

    static bool check(istream &in, istream &out) {
    }
};



int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
   	Task376C solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    out << fixed << setprecision(10);
	solver.solve(in, out);
	return 0;
}