#include <bits/stdc++.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <unistd.h>
using namespace std;

ofstream screen, res;
ifstream in;

void WA(int num = 0, string message = "") {
  res << "wrong answer\n";
  if (message != "") {
    res << message << endl;
  } else if (num == 1) {
    res << "too many questions" << endl;
  } else if (num == 2) {
    res << "incorrect format" << endl;
  }
}

void OK() { res << "accepted" << endl; }

void interactor() {
  int LIMIT = 6e4;
  int q_count = 0;

  int N;
  in >> N;  // read from input file

  cout << N << endl;           // print to stdout (to solution)
  screen << "G" << N << endl;  // print to screen

  while (1) {
    string type;
    cin >> type;  // get from stdin (from solution)
    screen << type << " ";
    if (type == "!") {  // answer
    } else {            // ask
      if (++q_count > LIMIT) {
        WA(1);  // too many questions
        return;
      }
    }
  }
  OK();
}

int main(int argc, char *argv[]) {
  char *que = "/tmp/que";
  char *ans = "/tmp/ans";
  mkfifo(que, 0777);
  mkfifo(ans, 0777);
  pid_t pid = fork();
  if (pid < 0) {
    return 1;
  }
  if (pid == 0) {
    int fd_read = open(ans, O_RDONLY);
    int fd_write = open(que, O_WRONLY);
    dup2(fd_read, 0);
    dup2(fd_write, 1);
    execl("solution", "solution", NULL);
  } else {
    int fd_write = open(ans, O_WRONLY);
    int fd_read = open(que, O_RDONLY);
    dup2(fd_read, 0);
    dup2(fd_write, 1);
    in.open(argv[1]);
    screen.open(argv[2]);
    res.open(argv[3]);
    interactor();
    in.close();
    screen.close();
    res.close();
  }
  unlink(que);
  unlink(ans);
  return 0;
}
